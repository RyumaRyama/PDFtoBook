#!/bin/bash

# $1 : PDF file name.
# $2 : Save path

# 作業用ディレクトリ
temp='.PtoB_temp'
# 強制終了時の後始末
my_trap () {
	rm -r $temp
	exit 1
}
trap 'my_trap' 1 2 3 15

# プログレスバー表示
Progress_bar () {
	# $1 : 進捗
	# $2 : 全体
	gauge=74
	percent=`echo "scale=3; $1 / $2" | bc`
	bar=`echo "scale=3; $gauge * $percent" | bc | sed -e "s/\([0-9]*\)\.[0-9]*$/\1/g"`
	percent=`echo "scale=0; $percent * 100" | bc | sed -e "s/\([0-9]*\)\.[0-9]*$/\1/g"`
	if [ "$bar" = "" ] ; then
		bar=0
	fi
	if [ "$percent" = "" ] ; then
		percent=0
	fi
	echo -n "["
	if [ $bar -ne 0 ] ; then
		for i in `seq $bar`
		do
			if [ $i -eq $bar ] ; then
				echo -n ">"
			else
				echo -n "-"
			fi
		done
	fi
	space=`expr $gauge - $bar`
	if [ $space -ne 0 ] ; then
		for j in `seq $space`
		do
			echo -n " "
		done
	fi
	echo -n "]"
	echo -n " $percent%"
	printf "\r"
}


# Yesなら進めるやつ
Yes_No () {
	read input
	if [ -z $input ] ; then
		echo -n '(Y/n) '
		Yes_No
	elif [ $input = 'n' ] ; then
		exit 1
	elif [ $input = 'Y' ] ; then
		return
	else
		echo -n '(Y/n) '
		Yes_No
	fi
}



# 綺麗な出来上がりになるけど面倒な印刷の並び
Attractive () {
	# $1 : input
	# $2 : output


	# 出力に使うファイル指定
	arg=''

	# 参照ページ指定用変数
	index=1

	count=1

	# 空白ページ取得
	blank=`which ptob | sed -e "s/\(.*\/\).*$/\1blank.pdf/g"`

	Progress_bar 0 $page_num
	while [ $page_num -ge $index ]
	do
		# ページ入れ替えの引数
		A='A'$index
		B='B'
		if [ $page_num -ge `expr $index + 1` ] ; then
			B='A'`expr $index + 1`
		fi
		C='B'
		if [ $page_num -ge `expr $index + 2` ] ; then
			C='A'`expr $index + 2`
		fi
		D='B'
		if [ $page_num -ge `expr $index + 3` ] ; then
			D='A'`expr $index + 3`
		fi

		pdftk A=$1 B=$blank cat $D $A $B $C output $temp"/"$count

		Progress_bar `expr $index - 1` $page_num

		arg=$arg" "$temp"/"$count
		count=`expr $count + 1`
		index=`expr $index + 4`
	done

	pdftk `echo $arg` output $2
	rm -r $temp

	Progress_bar $page_num $page_num
	echo ""
}


#見た目あれだけど楽なやつ
Comfortable () {
	# $1 : input
	# $2 : output
	echo "hoge"
}




# 引数処理シリーズ

# 引数が2つ以上ではない場合終了
if [ $# -ne 2 ] ; then
	echo 'Use "ptob [INPUT PDF FILE NAME] [OUTPUT PDF FILE NAME]"'
	exit 1
fi
# pdfファイルでない場合も終了
if [[ ! $1 =~ .*\.pdf ]] || [[ ! $2 =~ .*\.pdf ]] ; then
	echo 'Use "ptob [INPUT PDF FILE NAME] [OUTPUT PDF FILE NAME]"'
	exit 1
fi
# ファイルが見つからない場合も終了
if [ ! -e $1 ] ; then
	echo 'No such PDF file.'
	exit 1
fi
# 一時保存のファイルと同名のものがあって上書きされる恐れがある
if [ -f ./$temp ] ; then
	echo 'Please make a directory and then execute within it.'
	exit 1
else
	if [ -d ./$temp ] ; then
		echo '"PtoB_temp" directory exists so cannot execute.'
		echo -n 'Delete it and execute? (Y/n) '
		Yes_No
		rm -r $temp
	fi
fi

#作業用ディレクトリ，input PDFファイルを作成
mkdir -p $temp
input_pdf=`echo $1 | sed -e "s/.*\/\(.*\)$/\1/g"`
qpdf --decrypt $1 $temp"/"$input_pdf 2>/dev/null

# ページ数取得
page_num=`pdftk $temp"/"$input_pdf dump_data|grep NumberOfPages|sed -e "s/NumberOfPages: \([0-9]*\)/\1/g"`

Attractive $temp"/"$input_pdf $2
